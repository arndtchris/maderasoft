@using Madera.Service;
@using Madera.Model;
@using MaderaSoft.Models.DTO;
@using MaderaSoft.Areas.ServiceCommercial.Models.ViewModels;
@model PlanViewModel

<script src="~/Scripts/Admin/SimulateurMaison.js"></script>

<section id="AffichePlan" class="content">
    <div class="row">
        <div class="col-lg-12">
            <h2>Plan maison modulaire</h2>
            <div id="gauche">
                <label>Largueur</label><input id="larg" type="text" />
                <label>Longueur</label><input id="long" type="text" />
                <button id="button_svg">Générer</button>

                @if (Model.plan.id != 0)
                {
                    @Html.actionButton("Modifier votre plan", Parametres.TypeBouton.Modification, Url.Action("SavePlan", "Maison", new { area = "ServiceCommercial" }).ToString(), "save_svg")
            
                }
                else
                {
                    @Html.actionButton("Sauvegarder votre plan", Parametres.TypeBouton.Creation, Url.Action("SavePlan", "Maison", new { area = "ServiceCommercial" }).ToString(), "save_svg")

                }

                <button id="effacer" data-color='#000000'>Effacer</button>

                <!-- <ul id="carousel" class="elastislide-list">-->
                @foreach (ModuleDTO module in Model.lesModules)
                {
                    // @Html.Raw(String.Format("<li><img class='module' id='{0}_svg' data-code='{1}' data-nom='{0}' data-color='#0000ff' src='' alt='{0}' /><button class='module' id='{0}_svg' data-code='{1}' data-nom='{0}' data-color='#0000ff'>{0}</button></li>", module.libe, module.id));
                    @Html.Raw(String.Format("<button class='module' id='{0}_svg' data-code='{1}' data-nom='{0}' data-color='#0000ff'>{0}</button>", module.libe, module.id));
                }
                <!-- </ul>-->
                @if (Model.plan.id != 0)
                {
                    int largeur = Model.plan.largeur;
                    int longueur = Model.plan.longueur;

                    // intialisation valeur de départ
                    int xGrille = 10;
                    int yGrille = 10;

                    int numEtage = 1;

                    // boucle sur les étages du plan
                    foreach (Etage etage in Model.plan.listEtages)
                    {
                        @Html.Raw(String.Format("<svg class='dessin_svg' id='etage_{0}' style='width:500px;height:500px;'>", numEtage));

                        int taille = largeur + 1;

                        for (int i = 0; i < taille; i++)
                        {
                            for (int j = 0; j < longueur; j++)
                            {
                                PositionModule pm = new PositionModule();

                                int xAfter = xGrille + 40;
                                xGrille = xGrille + 1;

                                pm = etage.listPositionModule.FirstOrDefault(x => x.x1 == xGrille && x.x2 == xAfter && x.y1 == yGrille && x.y2 == yGrille);

                                if (pm.module != null)
                                {
                                    @Html.Raw(String.Format("<a onclick='changeColor(lineLong{0}{1}{2})' href='#'><line id='lineLong{0}{1}{2}' x1='{3}'x2='{4}' y1='{5}' y2='{5}' stroke='black' stroke-width='5' data-idPosition='{7}' data-values='{6}' style='stroke: rgb(0, 0, 255);'/></a>", i, j, numEtage, xGrille, xAfter, yGrille, pm.module.id, pm.id));

                                }
                                else
                                {
                                    @Html.Raw(String.Format("<a onclick='changeColor(lineLong{0}{1}{2})' href='#'><line id='lineLong{0}{1}{2}' x1='{3}'x2='{4}' y1='{5}' y2='{5}' stroke='black' stroke-width='5' /></a>", i, j, numEtage, xGrille, xAfter, yGrille));

                                }


                                xGrille = xAfter;
                            }
                            yGrille = yGrille + 40;
                            xGrille = 10;
                        }

                        xGrille = 10;
                        yGrille = 10;
                        taille = longueur + 1;
                        for (int i = 0; i < taille; i++)
                        {
                            for (int j = 0; j < largeur; j++)
                            {

                                //Création de l'objet PositionModule
                                PositionModule pm = new PositionModule();

                                int yAfter = yGrille + 40;
                                yGrille = yGrille + 1;

                                pm = etage.listPositionModule.FirstOrDefault(x => x.x1 == xGrille && x.x2 == xGrille && x.y1 == yGrille && x.y2 == yAfter);

                                if (pm.module != null)
                                {
                                    @Html.Raw(String.Format("<a onclick='changeColor(lineLarg{1}{0}{2})' href='#'><line id='lineLarg{1}{0}{2}' x1='{3}'x2='{3}' y1='{4}' y2='{5}' stroke='black' stroke-width='5' data-idPosition='{7}' data-values='{6}' style='stroke: rgb(0, 0, 255);' /></a>", i, j, numEtage, xGrille, yGrille, yAfter, pm.module.id, pm.id));

                                }
                                else
                                {
                                    @Html.Raw(String.Format("<a onclick='changeColor(lineLarg{1}{0}{2})' href='#'><line id='lineLarg{1}{0}{2}' x1='{3}'x2='{3}' y1='{4}' y2='{5}' stroke='black' stroke-width='5' /></a>", i, j, numEtage, xGrille, yGrille, yAfter));

                                }
                                yGrille = yAfter;
                            }
                            xGrille = xGrille + 40;
                            yGrille = 10;
                        }

                        numEtage++;

                        xGrille = 10;
                        yGrille = 10;

                        
                        @Html.Raw(String.Format("</svg>"));

                    }
                }
                <div id="dessin"></div>
            </div>
            <div id="droite">
                <div id="devis">
                    <h4>Devis</h4>
                    <hr />
                    <table id="recap"><tbody></tbody></table>
                    <hr />
                    <h4>Prix total</h4><p id="prixTot"></p>
                </div>
            </div>

            @Html.Raw(String.Format("<p style='display: none;' class='p_id'>{0}</p>", Model.plan.id))
            @Html.Raw(String.Format("<p style='display: none;' class='largeur_edit'>{0}</p>", Model.plan.largeur))
            @Html.Raw(String.Format("<p style='display: none;' class='longueur_edit'>{0}</p>", Model.plan.longueur))
            
        </div>
    </div>
</section>